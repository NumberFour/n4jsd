import  * as React from "react";
import {NextPageContext} from "dist/server/next";
import {INextRouter} from "router";

export external public interface ~AppInitialProps {
    pageProps: any;
}

export public interface ~NextAppContext {
    public Component: constructor{?} | (React.ComponentProps) => React.Element<?>;
    public router: INextRouter;
    public ctx: NextPageContext;
    public AppTree: any;
}

export default external public class NextApp <PropsT extends React.ComponentProps, StateT extends Object>
  extends React.Component<PropsT, StateT> {

    public static getInitialProps(Component: constructor{?} | (React.ComponentProps) => React.Element<?>, ctx: NextAppContext): Promise<AppInitialProps, any>;
    @Override
    public componentDidCatch(error: any, info: ~Object with { componentStack }): void;
    @Override
    public render(): constructor{?} | (React.ComponentProps) => React.Element<?>;
}
